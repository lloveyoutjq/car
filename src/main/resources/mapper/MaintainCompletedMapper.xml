<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.MaintainCompletedMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.MaintainCompleted" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eligibility" property="eligibility" jdbcType="INTEGER" />
    <result column="predictTime" property="predicttime" jdbcType="TIMESTAMP" />
    <result column="nowTime" property="nowtime" jdbcType="TIMESTAMP" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="workId" property="workid" jdbcType="INTEGER" />
    <result column="dutyId" property="dutyid" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="maintenanceId" property="maintenanceid" jdbcType="INTEGER" />
    <result column="reworkCount" property="reworkcount" jdbcType="INTEGER" />
    <result column="reasonforRework" property="reasonforrework" jdbcType="VARCHAR" />
    <result column="default1" property="default1" jdbcType="VARCHAR" />
    <result column="default2" property="default2" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMapPlus" type="com.accp.domain.MaintainCompleted" extends="BaseResultMap">
    <association property="dataMaintenanceItems" javaType="com.accp.domain.DataMaintenanceItems">
      <id column="dmiid" property="id"/>
    </association>
    <association property="maintainRescue" javaType="com.accp.domain.MaintainRescue">
      <id column="mrsitemid" property="itemid"/>
      <result column="mrsnumber" property="number"/>
      <result column="mrsworkteam" property="workteam"/>
      <result column="mrspickdate" property="pickdate"/>
    </association>
    <association property="dataItemtype" javaType="com.accp.domain.DataItemtype">
      <id column="diid" property="id"/>
      <result column="diname" property="name"/>
    </association>
    <association property="clientCarinfo" javaType="com.accp.domain.ClientCarinfo">
      <id column="ccid" property="id"/>
      <result column="cccarnumber" property="carnumber"/>
      <result column="ccframenumber" property="framenumber"/>
    </association>
    <association property="clientClientdata" javaType="com.accp.domain.ClientClientdata">
      <id column="ccdnumber" property="number"/>
      <result column="ccdname" property="name"/>
    </association>
    <association property="dataCar" javaType="com.accp.domain.DataCar">
      <id column="daid" property="id"/>
      <result column="dacartypename" property="cartypename"/>
    </association>
    <association property="personnelStaff" javaType="com.accp.domain.PersonnelStaff">
      <id column="psid" property="id"/>
      <result column="psstaffname" property="staffname"/>
    </association>
  </resultMap>
  <select id="completionInspection" resultMap="BaseResultMapPlus">
    SELECT mrs.`number` as mrsnumber ,di.`name` as diname , mrs.`workTeam` as mrsworkteam,ccd.`name` as ccdname ,
    cc.`carNumber` as cccarnumber, da.`carTypeName` as dacartypename ,cc.`frameNumber` as ccframenumber ,mrs.`pickDate` as mrspickdate,
    mc.`predictTime`,mc.`nowTime`,mc.`reason`,mc.`reworkCount`,mc.`reasonforRework`,ps.`staffName` as psstaffname ,mc.`price`,
    dmi.`id` as dmiid , mrs.`itemId` as mrsitemid , di.`id` as diid , cc.`id` as ccid , ccd.`number` as ccdnumber ,
    da.`id` as daid , ps.`id` as psid ,mc.`eligibility`
    FROM `maintain_completed` AS mc
    STRAIGHT_JOIN `data_maintenance_items` AS dmi
    ON mc.`maintenanceId` = dmi.`id`
    STRAIGHT_JOIN `maintain_rescue` AS mrs
    ON dmi.`id` = mrs.`itemId`
    STRAIGHT_JOIN `data_itemtype` AS di
    ON dmi.`typeId` = di.`id`
    STRAIGHT_JOIN `client_carinfo` AS cc
    ON mrs.`carInfoId` = cc.`id`
    STRAIGHT_JOIN `client_clientdata` ccd
    ON cc.`clientId` = ccd.`number`
    STRAIGHT_JOIN `data_car` AS da
    ON cc.`carId` = da.`id`
    STRAIGHT_JOIN `personnel_staff` AS ps
    ON mc.`dutyId` = ps.`id`
    WHERE mrs.`number` LIKE #{number} AND cc.`carNumber` LIKE #{carNumber} AND cc.`frameNumber` LIKE #{frameNumber}
    AND mc.`eligibility` = #{eligibility}
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, eligibility, predictTime, nowTime, reason, workId, dutyId, price, maintenanceId, 
    reworkCount, reasonforRework, default1, default2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.MaintainCompletedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from maintain_completed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from maintain_completed
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from maintain_completed
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.MaintainCompletedExample" >
    delete from maintain_completed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.MaintainCompleted" >
    insert into maintain_completed (id, eligibility, predictTime, 
      nowTime, reason, workId, 
      dutyId, price, maintenanceId, 
      reworkCount, reasonforRework, default1, 
      default2)
    values (#{id,jdbcType=INTEGER}, #{eligibility,jdbcType=INTEGER}, #{predicttime,jdbcType=TIMESTAMP}, 
      #{nowtime,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, #{workid,jdbcType=INTEGER}, 
      #{dutyid,jdbcType=INTEGER}, #{price,jdbcType=REAL}, #{maintenanceid,jdbcType=INTEGER}, 
      #{reworkcount,jdbcType=INTEGER}, #{reasonforrework,jdbcType=VARCHAR}, #{default1,jdbcType=VARCHAR}, 
      #{default2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.MaintainCompleted" >
    insert into maintain_completed
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eligibility != null" >
        eligibility,
      </if>
      <if test="predicttime != null" >
        predictTime,
      </if>
      <if test="nowtime != null" >
        nowTime,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="workid != null" >
        workId,
      </if>
      <if test="dutyid != null" >
        dutyId,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="maintenanceid != null" >
        maintenanceId,
      </if>
      <if test="reworkcount != null" >
        reworkCount,
      </if>
      <if test="reasonforrework != null" >
        reasonforRework,
      </if>
      <if test="default1 != null" >
        default1,
      </if>
      <if test="default2 != null" >
        default2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eligibility != null" >
        #{eligibility,jdbcType=INTEGER},
      </if>
      <if test="predicttime != null" >
        #{predicttime,jdbcType=TIMESTAMP},
      </if>
      <if test="nowtime != null" >
        #{nowtime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="workid != null" >
        #{workid,jdbcType=INTEGER},
      </if>
      <if test="dutyid != null" >
        #{dutyid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="maintenanceid != null" >
        #{maintenanceid,jdbcType=INTEGER},
      </if>
      <if test="reworkcount != null" >
        #{reworkcount,jdbcType=INTEGER},
      </if>
      <if test="reasonforrework != null" >
        #{reasonforrework,jdbcType=VARCHAR},
      </if>
      <if test="default1 != null" >
        #{default1,jdbcType=VARCHAR},
      </if>
      <if test="default2 != null" >
        #{default2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.MaintainCompletedExample" resultType="java.lang.Integer" >
    select count(*) from maintain_completed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update maintain_completed
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eligibility != null" >
        eligibility = #{record.eligibility,jdbcType=INTEGER},
      </if>
      <if test="record.predicttime != null" >
        predictTime = #{record.predicttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nowtime != null" >
        nowTime = #{record.nowtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.workid != null" >
        workId = #{record.workid,jdbcType=INTEGER},
      </if>
      <if test="record.dutyid != null" >
        dutyId = #{record.dutyid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.maintenanceid != null" >
        maintenanceId = #{record.maintenanceid,jdbcType=INTEGER},
      </if>
      <if test="record.reworkcount != null" >
        reworkCount = #{record.reworkcount,jdbcType=INTEGER},
      </if>
      <if test="record.reasonforrework != null" >
        reasonforRework = #{record.reasonforrework,jdbcType=VARCHAR},
      </if>
      <if test="record.default1 != null" >
        default1 = #{record.default1,jdbcType=VARCHAR},
      </if>
      <if test="record.default2 != null" >
        default2 = #{record.default2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update maintain_completed
    set id = #{record.id,jdbcType=INTEGER},
      eligibility = #{record.eligibility,jdbcType=INTEGER},
      predictTime = #{record.predicttime,jdbcType=TIMESTAMP},
      nowTime = #{record.nowtime,jdbcType=TIMESTAMP},
      reason = #{record.reason,jdbcType=VARCHAR},
      workId = #{record.workid,jdbcType=INTEGER},
      dutyId = #{record.dutyid,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL},
      maintenanceId = #{record.maintenanceid,jdbcType=INTEGER},
      reworkCount = #{record.reworkcount,jdbcType=INTEGER},
      reasonforRework = #{record.reasonforrework,jdbcType=VARCHAR},
      default1 = #{record.default1,jdbcType=VARCHAR},
      default2 = #{record.default2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.MaintainCompleted" >
    update maintain_completed
    <set >
      <if test="eligibility != null" >
        eligibility = #{eligibility,jdbcType=INTEGER},
      </if>
      <if test="predicttime != null" >
        predictTime = #{predicttime,jdbcType=TIMESTAMP},
      </if>
      <if test="nowtime != null" >
        nowTime = #{nowtime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="workid != null" >
        workId = #{workid,jdbcType=INTEGER},
      </if>
      <if test="dutyid != null" >
        dutyId = #{dutyid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="maintenanceid != null" >
        maintenanceId = #{maintenanceid,jdbcType=INTEGER},
      </if>
      <if test="reworkcount != null" >
        reworkCount = #{reworkcount,jdbcType=INTEGER},
      </if>
      <if test="reasonforrework != null" >
        reasonforRework = #{reasonforrework,jdbcType=VARCHAR},
      </if>
      <if test="default1 != null" >
        default1 = #{default1,jdbcType=VARCHAR},
      </if>
      <if test="default2 != null" >
        default2 = #{default2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.MaintainCompleted" >
    update maintain_completed
    set eligibility = #{eligibility,jdbcType=INTEGER},
      predictTime = #{predicttime,jdbcType=TIMESTAMP},
      nowTime = #{nowtime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      workId = #{workid,jdbcType=INTEGER},
      dutyId = #{dutyid,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL},
      maintenanceId = #{maintenanceid,jdbcType=INTEGER},
      reworkCount = #{reworkcount,jdbcType=INTEGER},
      reasonforRework = #{reasonforrework,jdbcType=VARCHAR},
      default1 = #{default1,jdbcType=VARCHAR},
      default2 = #{default2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>