<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.DataMaintenanceItemsMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.DataMaintenanceItems" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="itemsName" property="itemsname" jdbcType="VARCHAR" />
    <result column="typeId" property="typeid" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="normalPrice" property="normalprice" jdbcType="REAL" />
    <result column="memberPrice" property="memberprice" jdbcType="REAL" />
    <result column="vipPrice" property="vipprice" jdbcType="REAL" />
    <result column="negotiatedPrice" property="negotiatedprice" jdbcType="REAL" />
    <result column="claimPrice" property="claimprice" jdbcType="REAL" />
    <result column="insurancePrice" property="insuranceprice" jdbcType="REAL" />
    <result column="priceClass" property="priceclass" jdbcType="VARCHAR" />
    <result column="preeOfChargeFor" property="preeofchargefor" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="before_the_preferential" property="beforeThePreferential" jdbcType="DECIMAL" />
    <result column="after_the_preferential" property="afterThePreferential" jdbcType="DECIMAL" />
    <result column="workOrderNumber" property="workordernumber" jdbcType="VARCHAR" />
    <result column="fault" property="fault" jdbcType="VARCHAR" />
    <result column="faultResult" property="faultresult" jdbcType="VARCHAR" />
    <result column="staffId" property="staffid" jdbcType="INTEGER" />
    <result column="teamId" property="teamid" jdbcType="INTEGER" />
    <result column="default1" property="default1" jdbcType="VARCHAR" />
    <result column="default2" property="default2" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMapPlus" type="com.accp.domain.DataMaintenanceItems" extends="BaseResultMap">
    <association property="maintainRepair" javaType="com.accp.domain.MaintainRepair">
      <id column="mritemid" property="itemid"/>
      <result column="mrnumber" property="number"/>
      <result column="mrpickdate" property="pickdate"/>
      <result column="mrtype" property="type"/>
      <result column="mrtname" property="tname"/>
      <result column="mrcompletedate" property="completedate"/>
      <result column="mrsettledate" property="settledate"/>
    </association>
    <association property="clientCarinfo" javaType="com.accp.domain.ClientCarinfo">
      <id column="ccaid" property="id"/>
      <result column="ccacarnumber" property="carnumber"/>
    </association>
  </resultMap>
  <resultMap id="BaseResultMapPlus2" type="com.accp.domain.DataMaintenanceItems" extends="BaseResultMap">
    <association property="maintainRepair" javaType="com.accp.domain.MaintainRepair">
      <id column="mritemid" property="itemid"/>
      <result column="mrnumber" property="number"/>
    </association>
  </resultMap>
  <resultMap id="BaseResultMapPlus3" type="com.accp.domain.DataMaintenanceItems" extends="BaseResultMap">
    <association property="maintainRepair" javaType="com.accp.domain.MaintainRepair">
      <id column="mritemid" property="itemid"/>
      <result column="mrnumber" property="number"/>
    </association>
    <association property="personnelArtisanclass" javaType="com.accp.domain.PersonnelArtisanclass">
      <id column="paartisanClassId" property="artisanclassid"/>
      <result column="paartisanClassName" property="artisanclassname"/>
    </association>
    <association property="personnelStaff" javaType="com.accp.domain.PersonnelStaff">
      <id column="psid" property="id"/>
      <result column="psstaffname" property="staffname"/>
    </association>
  </resultMap>
  <select id="items" resultMap="BaseResultMapPlus">
    SELECT mr.`number` as mrnumber ,mr.`pickDate` as mrpickdate ,mr.`type` as mrtype ,
    mr.`tname` as mrtname ,mr.`completeDate` as mrcompletedate ,mr.`settleDate` as mrsettledate ,
    dmi.`id`  ,dmi.`itemsName` ,dmi.`normalPrice`,dmi.`memberPrice`,dmi.`vipPrice`,
    dmi.`fault` ,dmi.`faultResult` ,dmi.`workOrderNumber` , mr.`itemId` as mritemid ,cca.`id` as ccaid ,cca.`carNumber` as ccacarnumber
    FROM `data_maintenance_items` AS dmi
    STRAIGHT_JOIN (
    SELECT mrp.`number`,mrp.`carInfoId`,mrp.`type`,mrp.`pickDate`,mrp.`completeDate`,mrp.`settleDate`,mrp.`itemId`,'维修单' AS tname FROM `maintain_repair` AS mrp
    UNION ALL
    SELECT mrs.`number`,mrs.`carInfoId`,mrs.`type`,mrs.`pickDate`,mrs.`completeDate`,mrs.`settleDate`,mrs.`itemId`,'救援单' AS tname FROM `maintain_rescue` AS mrs
    ) AS mr
    ON dmi.`id` = mr.`itemId`
    STRAIGHT_JOIN `client_carinfo` AS cca
    ON mr.`carInfoId` = cca.`id`
    WHERE cca.`carNumber` = #{carNumber}
  </select>
  <select id="attached" resultMap="BaseResultMapPlus2">
    SELECT dmi.`id`,dmi.`itemsName`,dmi.`num`,
    dmi.`before_the_preferential`,dmi.`after_the_preferential` , mr.`itemId` as mritemid ,mr.`number` as mrnumber
    FROM `data_maintenance_items` AS dmi
    STRAIGHT_JOIN (
    SELECT mrp.`number`,mrp.`itemId` FROM `maintain_repair` AS mrp
    UNION ALL
    SELECT mrs.`number`,mrs.`itemId` FROM `maintain_rescue` AS mrs
    ) AS mr
    ON dmi.`id` = mr.`itemId`
    WHERE mr.`number` = #{number}
  </select>
  <select id="itemsSels" resultMap="BaseResultMapPlus3">
    SELECT dmi.`id`,dmi.`itemsName`,dmi.`priceClass`,dmi.`num`,
    dmi.`before_the_preferential`,dmi.`after_the_preferential`,
    dmi.`fault`,dmi.`faultResult`,pa.`artisanClassName` as paartisanClassName ,
    ps.`staffName` as psstaffname ,dmi.`workOrderNumber`,dmi.`preeOfChargeFor`,mr.`itemId` as mritemid ,mr.`number` as mrnumber ,
    pa.`artisanClassId` as paartisanClassId , ps.`id` as psid
    FROM `data_maintenance_items` AS dmi
    STRAIGHT_JOIN (
    SELECT mrp.`number`,mrp.`itemId` FROM `maintain_repair` AS mrp
    UNION ALL
    SELECT mrs.`number`,mrs.`itemId` FROM `maintain_rescue` AS mrs
    ) AS mr
    ON dmi.`id` = mr.`itemId`
    STRAIGHT_JOIN `personnel_artisanclass` AS pa
    ON dmi.`teamId` = pa.`artisanClassId`
    STRAIGHT_JOIN `personnel_staff` AS ps
    ON dmi.`staffId` = ps.`id`
    WHERE mr.`number` = #{number}
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, itemsName, typeId, remark, normalPrice, memberPrice, vipPrice, negotiatedPrice, 
    claimPrice, insurancePrice, priceClass, preeOfChargeFor, num, before_the_preferential, 
    after_the_preferential, workOrderNumber, fault, faultResult, staffId, teamId, default1, 
    default2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.DataMaintenanceItemsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_maintenance_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from data_maintenance_items
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from data_maintenance_items
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.DataMaintenanceItemsExample" >
    delete from data_maintenance_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.DataMaintenanceItems" >
    insert into data_maintenance_items (id, itemsName, typeId, 
      remark, normalPrice, memberPrice, 
      vipPrice, negotiatedPrice, claimPrice, 
      insurancePrice, priceClass, preeOfChargeFor, 
      num, before_the_preferential, after_the_preferential, 
      workOrderNumber, fault, faultResult, 
      staffId, teamId, default1, 
      default2)
    values (#{id,jdbcType=INTEGER}, #{itemsname,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{normalprice,jdbcType=REAL}, #{memberprice,jdbcType=REAL}, 
      #{vipprice,jdbcType=REAL}, #{negotiatedprice,jdbcType=REAL}, #{claimprice,jdbcType=REAL}, 
      #{insuranceprice,jdbcType=REAL}, #{priceclass,jdbcType=VARCHAR}, #{preeofchargefor,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{beforeThePreferential,jdbcType=DECIMAL}, #{afterThePreferential,jdbcType=DECIMAL}, 
      #{workordernumber,jdbcType=VARCHAR}, #{fault,jdbcType=VARCHAR}, #{faultresult,jdbcType=VARCHAR}, 
      #{staffid,jdbcType=INTEGER}, #{teamid,jdbcType=INTEGER}, #{default1,jdbcType=VARCHAR}, 
      #{default2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.DataMaintenanceItems" >
    insert into data_maintenance_items
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="itemsname != null" >
        itemsName,
      </if>
      <if test="typeid != null" >
        typeId,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="normalprice != null" >
        normalPrice,
      </if>
      <if test="memberprice != null" >
        memberPrice,
      </if>
      <if test="vipprice != null" >
        vipPrice,
      </if>
      <if test="negotiatedprice != null" >
        negotiatedPrice,
      </if>
      <if test="claimprice != null" >
        claimPrice,
      </if>
      <if test="insuranceprice != null" >
        insurancePrice,
      </if>
      <if test="priceclass != null" >
        priceClass,
      </if>
      <if test="preeofchargefor != null" >
        preeOfChargeFor,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="beforeThePreferential != null" >
        before_the_preferential,
      </if>
      <if test="afterThePreferential != null" >
        after_the_preferential,
      </if>
      <if test="workordernumber != null" >
        workOrderNumber,
      </if>
      <if test="fault != null" >
        fault,
      </if>
      <if test="faultresult != null" >
        faultResult,
      </if>
      <if test="staffid != null" >
        staffId,
      </if>
      <if test="teamid != null" >
        teamId,
      </if>
      <if test="default1 != null" >
        default1,
      </if>
      <if test="default2 != null" >
        default2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="itemsname != null" >
        #{itemsname,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="normalprice != null" >
        #{normalprice,jdbcType=REAL},
      </if>
      <if test="memberprice != null" >
        #{memberprice,jdbcType=REAL},
      </if>
      <if test="vipprice != null" >
        #{vipprice,jdbcType=REAL},
      </if>
      <if test="negotiatedprice != null" >
        #{negotiatedprice,jdbcType=REAL},
      </if>
      <if test="claimprice != null" >
        #{claimprice,jdbcType=REAL},
      </if>
      <if test="insuranceprice != null" >
        #{insuranceprice,jdbcType=REAL},
      </if>
      <if test="priceclass != null" >
        #{priceclass,jdbcType=VARCHAR},
      </if>
      <if test="preeofchargefor != null" >
        #{preeofchargefor,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="beforeThePreferential != null" >
        #{beforeThePreferential,jdbcType=DECIMAL},
      </if>
      <if test="afterThePreferential != null" >
        #{afterThePreferential,jdbcType=DECIMAL},
      </if>
      <if test="workordernumber != null" >
        #{workordernumber,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        #{fault,jdbcType=VARCHAR},
      </if>
      <if test="faultresult != null" >
        #{faultresult,jdbcType=VARCHAR},
      </if>
      <if test="staffid != null" >
        #{staffid,jdbcType=INTEGER},
      </if>
      <if test="teamid != null" >
        #{teamid,jdbcType=INTEGER},
      </if>
      <if test="default1 != null" >
        #{default1,jdbcType=VARCHAR},
      </if>
      <if test="default2 != null" >
        #{default2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.DataMaintenanceItemsExample" resultType="java.lang.Integer" >
    select count(*) from data_maintenance_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update data_maintenance_items
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.itemsname != null" >
        itemsName = #{record.itemsname,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.normalprice != null" >
        normalPrice = #{record.normalprice,jdbcType=REAL},
      </if>
      <if test="record.memberprice != null" >
        memberPrice = #{record.memberprice,jdbcType=REAL},
      </if>
      <if test="record.vipprice != null" >
        vipPrice = #{record.vipprice,jdbcType=REAL},
      </if>
      <if test="record.negotiatedprice != null" >
        negotiatedPrice = #{record.negotiatedprice,jdbcType=REAL},
      </if>
      <if test="record.claimprice != null" >
        claimPrice = #{record.claimprice,jdbcType=REAL},
      </if>
      <if test="record.insuranceprice != null" >
        insurancePrice = #{record.insuranceprice,jdbcType=REAL},
      </if>
      <if test="record.priceclass != null" >
        priceClass = #{record.priceclass,jdbcType=VARCHAR},
      </if>
      <if test="record.preeofchargefor != null" >
        preeOfChargeFor = #{record.preeofchargefor,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.beforeThePreferential != null" >
        before_the_preferential = #{record.beforeThePreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.afterThePreferential != null" >
        after_the_preferential = #{record.afterThePreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.workordernumber != null" >
        workOrderNumber = #{record.workordernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.fault != null" >
        fault = #{record.fault,jdbcType=VARCHAR},
      </if>
      <if test="record.faultresult != null" >
        faultResult = #{record.faultresult,jdbcType=VARCHAR},
      </if>
      <if test="record.staffid != null" >
        staffId = #{record.staffid,jdbcType=INTEGER},
      </if>
      <if test="record.teamid != null" >
        teamId = #{record.teamid,jdbcType=INTEGER},
      </if>
      <if test="record.default1 != null" >
        default1 = #{record.default1,jdbcType=VARCHAR},
      </if>
      <if test="record.default2 != null" >
        default2 = #{record.default2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update data_maintenance_items
    set id = #{record.id,jdbcType=INTEGER},
      itemsName = #{record.itemsname,jdbcType=VARCHAR},
      typeId = #{record.typeid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      normalPrice = #{record.normalprice,jdbcType=REAL},
      memberPrice = #{record.memberprice,jdbcType=REAL},
      vipPrice = #{record.vipprice,jdbcType=REAL},
      negotiatedPrice = #{record.negotiatedprice,jdbcType=REAL},
      claimPrice = #{record.claimprice,jdbcType=REAL},
      insurancePrice = #{record.insuranceprice,jdbcType=REAL},
      priceClass = #{record.priceclass,jdbcType=VARCHAR},
      preeOfChargeFor = #{record.preeofchargefor,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      before_the_preferential = #{record.beforeThePreferential,jdbcType=DECIMAL},
      after_the_preferential = #{record.afterThePreferential,jdbcType=DECIMAL},
      workOrderNumber = #{record.workordernumber,jdbcType=VARCHAR},
      fault = #{record.fault,jdbcType=VARCHAR},
      faultResult = #{record.faultresult,jdbcType=VARCHAR},
      staffId = #{record.staffid,jdbcType=INTEGER},
      teamId = #{record.teamid,jdbcType=INTEGER},
      default1 = #{record.default1,jdbcType=VARCHAR},
      default2 = #{record.default2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.DataMaintenanceItems" >
    update data_maintenance_items
    <set >
      <if test="itemsname != null" >
        itemsName = #{itemsname,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="normalprice != null" >
        normalPrice = #{normalprice,jdbcType=REAL},
      </if>
      <if test="memberprice != null" >
        memberPrice = #{memberprice,jdbcType=REAL},
      </if>
      <if test="vipprice != null" >
        vipPrice = #{vipprice,jdbcType=REAL},
      </if>
      <if test="negotiatedprice != null" >
        negotiatedPrice = #{negotiatedprice,jdbcType=REAL},
      </if>
      <if test="claimprice != null" >
        claimPrice = #{claimprice,jdbcType=REAL},
      </if>
      <if test="insuranceprice != null" >
        insurancePrice = #{insuranceprice,jdbcType=REAL},
      </if>
      <if test="priceclass != null" >
        priceClass = #{priceclass,jdbcType=VARCHAR},
      </if>
      <if test="preeofchargefor != null" >
        preeOfChargeFor = #{preeofchargefor,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="beforeThePreferential != null" >
        before_the_preferential = #{beforeThePreferential,jdbcType=DECIMAL},
      </if>
      <if test="afterThePreferential != null" >
        after_the_preferential = #{afterThePreferential,jdbcType=DECIMAL},
      </if>
      <if test="workordernumber != null" >
        workOrderNumber = #{workordernumber,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        fault = #{fault,jdbcType=VARCHAR},
      </if>
      <if test="faultresult != null" >
        faultResult = #{faultresult,jdbcType=VARCHAR},
      </if>
      <if test="staffid != null" >
        staffId = #{staffid,jdbcType=INTEGER},
      </if>
      <if test="teamid != null" >
        teamId = #{teamid,jdbcType=INTEGER},
      </if>
      <if test="default1 != null" >
        default1 = #{default1,jdbcType=VARCHAR},
      </if>
      <if test="default2 != null" >
        default2 = #{default2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.DataMaintenanceItems" >
    update data_maintenance_items
    set itemsName = #{itemsname,jdbcType=VARCHAR},
      typeId = #{typeid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      normalPrice = #{normalprice,jdbcType=REAL},
      memberPrice = #{memberprice,jdbcType=REAL},
      vipPrice = #{vipprice,jdbcType=REAL},
      negotiatedPrice = #{negotiatedprice,jdbcType=REAL},
      claimPrice = #{claimprice,jdbcType=REAL},
      insurancePrice = #{insuranceprice,jdbcType=REAL},
      priceClass = #{priceclass,jdbcType=VARCHAR},
      preeOfChargeFor = #{preeofchargefor,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      before_the_preferential = #{beforeThePreferential,jdbcType=DECIMAL},
      after_the_preferential = #{afterThePreferential,jdbcType=DECIMAL},
      workOrderNumber = #{workordernumber,jdbcType=VARCHAR},
      fault = #{fault,jdbcType=VARCHAR},
      faultResult = #{faultresult,jdbcType=VARCHAR},
      staffId = #{staffid,jdbcType=INTEGER},
      teamId = #{teamid,jdbcType=INTEGER},
      default1 = #{default1,jdbcType=VARCHAR},
      default2 = #{default2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>