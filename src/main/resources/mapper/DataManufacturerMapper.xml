<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.DataManufacturerMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.DataManufacturer" >
    <id column="number" property="number" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="manage" property="manage" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="bankNumber" property="banknumber" jdbcType="VARCHAR" />
    <result column="payment" property="payment" jdbcType="VARCHAR" />
    <result column="laver" property="laver" jdbcType="VARCHAR" />
    <result column="brank" property="brank" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="default1" property="default1" jdbcType="VARCHAR" />
    <result column="default2" property="default2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    number, name, address, manage, url, bank, bankNumber, payment, laver, brank, type, 
    default1, default2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.DataManufacturerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_manufacturer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from data_manufacturer
    where number = #{number,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from data_manufacturer
    where number = #{number,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.DataManufacturerExample" >
    delete from data_manufacturer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.DataManufacturer" >
    insert into data_manufacturer (number, name, address, 
      manage, url, bank, 
      bankNumber, payment, laver, 
      brank, type, default1, 
      default2)
    values (#{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{manage,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, 
      #{banknumber,jdbcType=VARCHAR}, #{payment,jdbcType=VARCHAR}, #{laver,jdbcType=VARCHAR}, 
      #{brank,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{default1,jdbcType=VARCHAR}, 
      #{default2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.DataManufacturer" >
    insert into data_manufacturer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        number,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="manage != null" >
        manage,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="banknumber != null" >
        bankNumber,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="laver != null" >
        laver,
      </if>
      <if test="brank != null" >
        brank,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="default1 != null" >
        default1,
      </if>
      <if test="default2 != null" >
        default2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="manage != null" >
        #{manage,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="banknumber != null" >
        #{banknumber,jdbcType=VARCHAR},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="laver != null" >
        #{laver,jdbcType=VARCHAR},
      </if>
      <if test="brank != null" >
        #{brank,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="default1 != null" >
        #{default1,jdbcType=VARCHAR},
      </if>
      <if test="default2 != null" >
        #{default2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.DataManufacturerExample" resultType="java.lang.Integer" >
    select count(*) from data_manufacturer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update data_manufacturer
    <set >
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.manage != null" >
        manage = #{record.manage,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null" >
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.banknumber != null" >
        bankNumber = #{record.banknumber,jdbcType=VARCHAR},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.laver != null" >
        laver = #{record.laver,jdbcType=VARCHAR},
      </if>
      <if test="record.brank != null" >
        brank = #{record.brank,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.default1 != null" >
        default1 = #{record.default1,jdbcType=VARCHAR},
      </if>
      <if test="record.default2 != null" >
        default2 = #{record.default2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update data_manufacturer
    set number = #{record.number,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      manage = #{record.manage,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      bankNumber = #{record.banknumber,jdbcType=VARCHAR},
      payment = #{record.payment,jdbcType=VARCHAR},
      laver = #{record.laver,jdbcType=VARCHAR},
      brank = #{record.brank,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      default1 = #{record.default1,jdbcType=VARCHAR},
      default2 = #{record.default2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.DataManufacturer" >
    update data_manufacturer
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="manage != null" >
        manage = #{manage,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="banknumber != null" >
        bankNumber = #{banknumber,jdbcType=VARCHAR},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="laver != null" >
        laver = #{laver,jdbcType=VARCHAR},
      </if>
      <if test="brank != null" >
        brank = #{brank,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="default1 != null" >
        default1 = #{default1,jdbcType=VARCHAR},
      </if>
      <if test="default2 != null" >
        default2 = #{default2,jdbcType=VARCHAR},
      </if>
    </set>
    where number = #{number,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.DataManufacturer" >
    update data_manufacturer
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      manage = #{manage,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      bankNumber = #{banknumber,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=VARCHAR},
      laver = #{laver,jdbcType=VARCHAR},
      brank = #{brank,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      default1 = #{default1,jdbcType=VARCHAR},
      default2 = #{default2,jdbcType=VARCHAR}
    where number = #{number,jdbcType=VARCHAR}
  </update>
</mapper>